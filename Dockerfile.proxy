FROM node:20.11-bullseye
ARG HTTP_PROXY
ARG HTTPS_PROXY

ENV HTTP_PROXY=${HTTP_PROXY}
ENV HTTPS_PROXY=${HTTPS_PROXY}

ENV http_proxy=${HTTP_PROXY}
ENV https_proxy=${HTTPS_PROXY}

ENV NO_PROXY=localhost,127.0.0.1,.docker.internal,supabase.com,dl-cdn.alpinelinux.org
WORKDIR /app

RUN if [ -n "${HTTP_PROXY}" ]; then \
      npm config set proxy ${HTTP_PROXY} && \
      npm config set https-proxy ${HTTPS_PROXY} && \
      { echo "proxy=${HTTP_PROXY}"; \
        echo "http-proxy=${HTTP_PROXY}"; \
        echo "https-proxy=${HTTPS_PROXY}"; } > /root/.curlrc; \
    fi

RUN if [ -z "${HTTP_PROXY}" ]; then \
      apt-get update && apt-get install -y curl ca-certificates; \
    else \
      http_proxy=${HTTP_PROXY} https_proxy=${HTTPS_PROXY} \
      apt-get update && apt-get install -y curl ca-certificates; \
    fi

RUN echo "precedence ::ffff:0:0/96 100" > /etc/gai.conf

COPY package*.json ./

# Install dependencies with proxy support
RUN if [ -n "${HTTP_PROXY}" ]; then \
      npm config set proxy ${HTTP_PROXY} && \
      npm config set https-proxy ${HTTPS_PROXY} && \
      npm config set strict-ssl false; \
    fi && \
    npm install --verbose

COPY . .

RUN npx prisma generate

EXPOSE 3000

CMD ["npm", "run", "dev"]